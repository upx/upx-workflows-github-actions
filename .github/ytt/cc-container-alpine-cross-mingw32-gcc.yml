# Copyright (C) Markus Franz Xaver Johannes Oberhumer
#
#

name: 'CC - container Alpine mingw32-gcc'
'on':
  schedule: [cron: '20 1 * * 2'] # run weekly Tuesday 01:20 UTC
  workflow_dispatch: null
env:
  CMAKE_REQUIRED_QUIET: 'OFF'
  CMAKE_VERBOSE_MAKEFILE: 'ON'
  CTEST_OUTPUT_ON_FAILURE: 'ON'
  DEBIAN_FRONTEND: noninteractive
  UPX_CMAKE_CONFIG_FLAGS: -Wdev --warn-uninitialized
  UPX_CONFIG_EXPECT_THREADS: 'ON'
  VERBOSE: 1

  # these are exactly like the GITHUB_xxx default environment variables
  REMOTE_REF_NAME: devel
  REMOTE_REF_TYPE: branch         # branch OR tag
  REMOTE_REPOSITORY: upx/upx
  REMOTE_SERVER_URL: https://github.com
  REMOTE_SHA: '0000000000000000000000000000000000000000' # will get updated below

jobs:
  mingw32-gcc: # uses cmake + make
    if: github.repository_owner == 'upx'

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { container: 'alpine:3.18' } # i686-mingw-w64-gcc-12.2
          - { container: 'alpine:3.19' } # i686-mingw-w64-gcc-13.2
          - { container: 'alpine:edge' } # i686-mingw-w64-gcc-13.2

    env:
      CC: 'i686-w64-mingw32-gcc -static'
      CXX: 'i686-w64-mingw32-g++ -static'
      CMAKE_SYSTEM_NAME: Windows
      CMAKE_CROSSCOMPILING_EMULATOR: wine

    steps:

      - name: 'Display environment'
        run: |
          uname -a; pwd; id; umask
          env | LC_ALL=C sort

      - name: ${{ format('Install packages {0}', matrix.container) }}
        run: |
          apk update && apk upgrade && apk add cmake git i686-mingw-w64-gcc make

      - name: ${{ format('Check out {0}/{1} {2} {3} source code', env.REMOTE_SERVER_URL, env.REMOTE_REPOSITORY, env.REMOTE_REF_TYPE, env.REMOTE_REF_NAME) }}
        run: |
          # git config
          git config --global core.autocrlf false
          git config --global --add safe.directory '*'
          # install Self, needed for config file below
          ##git clone --branch "$GITHUB_REF_NAME" --depth 1 "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" ../Self

          git clone --branch "$REMOTE_REF_NAME" --depth 1 "$REMOTE_SERVER_URL/$REMOTE_REPOSITORY" .
          test -f ./.gitmodules && git submodule update --init
          # TODO: handle REMOTE_REF_TYPE == "tag"
          # update environment
          rev="$(git rev-parse HEAD)"
          echo "REMOTE_SHA=$rev" >> $GITHUB_ENV

      - name: ${{ format('Build Debug with {0} and {1}', env.CC, env.CXX) }}
        run: 'make build/debug'
      - name: ${{ format('Build Release with {0} and {1}', env.CC, env.CXX) }}
        run: 'make build/release'

      - run: apk add wine && mkdir -p ~/.wine && wineboot --init

      - name: Run ctest tests Debug under Wine
        run: cd build/debug && ctest
      - name: Run ctest tests Release under Wine
        if: success() || failure() # run this step even if the previous step failed
        run: cd build/release && ctest

      - name: Mimic ctest tests Debug under Wine
        if: hashFiles('./misc/testsuite/mimic_ctest.sh') != ''
        run: apk add bash && cd build/debug && upx_exe=./upx.exe bash ../../misc/testsuite/mimic_ctest.sh
      - name: Mimic ctest tests Release under Wine
        if: hashFiles('./misc/testsuite/mimic_ctest.sh') != ''
        run: apk add bash && cd build/release && upx_exe=./upx.exe bash ../../misc/testsuite/mimic_ctest.sh
