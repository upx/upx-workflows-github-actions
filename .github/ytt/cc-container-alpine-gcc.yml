# Copyright (C) Markus Franz Xaver Johannes Oberhumer
#
#

name: 'CC - container Alpine gcc'
'on':
  schedule: [cron: '05 1 * * 2'] # run weekly Tuesday 01:05 UTC
  workflow_dispatch: null
env:
  CMAKE_REQUIRED_QUIET: 'OFF'
  CMAKE_VERBOSE_MAKEFILE: 'ON'
  CTEST_OUTPUT_ON_FAILURE: 'ON'
  DEBIAN_FRONTEND: noninteractive
  UPX_CMAKE_CONFIG_FLAGS: -Wdev --warn-uninitialized
  UPX_CONFIG_EXPECT_THREADS: 'ON'
  VERBOSE: 1

  # these are exactly like the GITHUB_xxx default environment variables
  REMOTE_REF_NAME: devel
  REMOTE_REF_TYPE: branch         # branch OR tag
  REMOTE_REPOSITORY: upx/upx
  REMOTE_SERVER_URL: https://github.com
  REMOTE_SHA: '0000000000000000000000000000000000000000' # will get updated below

jobs:
  gcc: # uses cmake + make
    if: github.repository_owner == 'upx'

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { container: 'alpine:3.9' }  # gcc-8.3
          - { container: 'alpine:3.10' } # gcc-8.3
          - { container: 'alpine:3.11' } # gcc-9.3
          - { container: 'alpine:3.12', skip_qemu: true } # gcc-9.3            QEMU is broken
          - { container: 'alpine:3.13' } # gcc-10.2
          - { container: 'alpine:3.14' } # gcc-10.3
          - { container: 'alpine:3.15' } # gcc-10.3
          - { container: 'alpine:3.16' } # gcc-11.2
          - { container: 'alpine:3.17' } # gcc-12.2
          - { container: 'alpine:3.18' } # gcc-12.2
          - { container: 'alpine:3.19' } # gcc-13.2
          - { container: 'alpine:edge' } # gcc-13.2
          # 32-bit i386 versions
          - { container: 'i386/alpine:3.9' }  # gcc-8.3
          - { container: 'i386/alpine:3.10' } # gcc-8.3
          - { container: 'i386/alpine:3.11' } # gcc-9.3
          - { container: 'i386/alpine:3.12' } # gcc-9.3       QEMU is broken
          - { container: 'i386/alpine:3.13' } # gcc-10.2
          - { container: 'i386/alpine:3.14' } # gcc-10.3
          - { container: 'i386/alpine:3.15' } # gcc-10.3
          - { container: 'i386/alpine:3.16' } # gcc-11.2
          - { container: 'i386/alpine:3.17' } # gcc-12.2
          - { container: 'i386/alpine:3.18' } # gcc-12.2
          - { container: 'i386/alpine:3.19' } # gcc-13.2
          - { container: 'i386/alpine:edge' } # gcc-13.2

    env:
      CC: 'gcc'
      CXX: 'g++'

    steps:

      - name: 'Display environment'
        run: |
          uname -a; pwd; id; umask
          env | LC_ALL=C sort

      - name: ${{ format('Install packages {0}', matrix.container) }}
        run: |
          apk update && apk upgrade && apk add cmake g++ git make

      - name: ${{ format('Check out {0}/{1} {2} {3} source code', env.REMOTE_SERVER_URL, env.REMOTE_REPOSITORY, env.REMOTE_REF_TYPE, env.REMOTE_REF_NAME) }}
        run: |
          # git config
          git config --global core.autocrlf false
          git config --global --add safe.directory '*'
          # install Self, needed for config file below
          ##git clone --branch "$GITHUB_REF_NAME" --depth 1 "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" ../Self

          git clone --branch "$REMOTE_REF_NAME" --depth 1 "$REMOTE_SERVER_URL/$REMOTE_REPOSITORY" .
          test -f ./.gitmodules && git submodule update --init
          # TODO: handle REMOTE_REF_TYPE == "tag"
          # update environment
          rev="$(git rev-parse HEAD)"
          echo "REMOTE_SHA=$rev" >> $GITHUB_ENV

      - name: ${{ format('Build Debug with {0} and {1}', env.CC, env.CXX) }}
        run: 'make build/debug'
      - name: ${{ format('Build Release with {0} and {1}', env.CC, env.CXX) }}
        run: 'make build/release'

      - name: 'Run tests'
        run: |
          # INFO: "ctest --test-dir DIR" only works on Alpine >= 3.14 (cmake-3.20.6)
          (cd build/debug && ctest)
          (cd build/release && ctest)
          if test -f ./misc/testsuite/test_symlinks.sh; then true;
            apk add bash sudo
            # IMPORTANT: do NOT run as user root!
            (cd build/release && chmod a+w . && sudo -u operator bash ../../misc/testsuite/test_symlinks.sh)
          fi
          true

      - name: Mimic ctest tests
        run: |
          if test -f ./misc/testsuite/mimic_ctest.sh; then true;
            apk add bash
            (cd build/debug && bash ../../misc/testsuite/mimic_ctest.sh)
            (cd build/release && bash ../../misc/testsuite/mimic_ctest.sh)
          fi
          true

      # qemu-5.0.0-r2 on Alpine 3.12 crashes on "./upx-packed.out --version-short" (both under i386 and x86_64)
      - name: Mimic ctest tests QEMU
        if: ${{ !matrix.skip_qemu }}
        run: |
          if test -f ./misc/testsuite/mimic_ctest.sh; then true;
            case ${{ matrix.container }} in
              i386/*) apk add bash qemu-i386; export upx_exe_runner=qemu-i386 ;;
              *)      apk add bash qemu-x86_64; export upx_exe_runner=qemu-x86_64 ;;
            esac
            (cd build/debug && bash ../../misc/testsuite/mimic_ctest.sh)
            (cd build/release && bash ../../misc/testsuite/mimic_ctest.sh)
          fi
          true
